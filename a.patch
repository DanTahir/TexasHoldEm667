diff --git a/backend/server.ts b/backend/server.ts
index 8ea84f4..a63b484 100644
--- a/backend/server.ts
+++ b/backend/server.ts
@@ -10,7 +10,6 @@ import cookieParser from "cookie-parser";
 import { setUpDevEnv } from "@backend/utilities/set-up-dev-env.js";
 import connectLiveReload from "connect-livereload";
 import expressSession from "express-session";
-import { User } from "@backend/db/dao/UserDao";
 import { authenticated } from "@backend/middleware/authenticated";
 import connectPgSimple from "connect-pg-simple";
 import { sessionLocals } from "@backend/middleware/session-locals";
@@ -27,12 +26,6 @@ if (process.env.NODE_ENV == "development") {
   app.use(morgan("dev"));
 }
 
-declare module "express-session" {
-  interface SessionData {
-    user: User;
-  }
-}
-
 app.use(cors());
 app.use(express.json());
 app.use(express.urlencoded({ extended: false }));
@@ -61,7 +54,6 @@ io.engine.use(sessionMiddleware);
 app.set("io", io);
 
 io.on("connection", (socket: Socket) => {
-  // @ts-expect-error can't get rid of session error
   const sessionId = socket.request.session.id;
 
   console.log("connection: " + sessionId);
diff --git a/frontend/chat/index.ts b/frontend/chat/index.ts
index a5d170b..70303d0 100644
--- a/frontend/chat/index.ts
+++ b/frontend/chat/index.ts
@@ -2,36 +2,40 @@ import { io } from "socket.io-client";
 
 const chatSocket = io();
 
-const chatWindow = document.querySelector("#chatbox") ?? new HTMLDivElement;
+const chatWindow = document.querySelector("#chatbox") ?? new HTMLDivElement();
 
-chatSocket.on("chat:message:0", ({from, message}) => {
+chatSocket.on("chat:message:0", ({ from, message }) => {
   const msgDiv = document.querySelector("#chatMessage") as HTMLTemplateElement;
   const msgDivCloneNode = msgDiv.content.cloneNode(true);
   const msgDivCloneDiv = msgDivCloneNode as HTMLDivElement;
-  const messageUser = msgDivCloneDiv.querySelector("#chatMessageUser") as HTMLParagraphElement ?? new HTMLParagraphElement;
-  const messageText = msgDivCloneDiv.querySelector("#chatMessageText") as HTMLParagraphElement ?? new HTMLParagraphElement;
+  const messageUser =
+    (msgDivCloneDiv.querySelector(
+      "#chatMessageUser",
+    ) as HTMLParagraphElement) ?? new HTMLParagraphElement();
+  const messageText =
+    (msgDivCloneDiv.querySelector(
+      "#chatMessageText",
+    ) as HTMLParagraphElement) ?? new HTMLParagraphElement();
   messageUser.innerText = from;
   messageText.innerText = message;
 
-
   chatWindow.appendChild(msgDiv);
-
 });
 
-document.querySelector("#messageInput")?.addEventListener("keydown", (event: Event) => {
-    if ((event as KeyboardEvent).key === 'Enter') {
+document
+  .querySelector("#messageInput")
+  ?.addEventListener("keydown", (event: Event) => {
+    if ((event as KeyboardEvent).key === "Enter") {
       const message = (event.target as HTMLInputElement).value;
-      
+
       console.log(message);
-      
-        fetch("/chat/0", {
-            method: "post",
-            headers: { "Content-Type": "application/json" },
-            body: JSON.stringify({ message }),
-          });
-    
-      
-
-          (event.target as HTMLInputElement).value = "";
+
+      fetch("/chat/0", {
+        method: "post",
+        headers: { "Content-Type": "application/json" },
+        body: JSON.stringify({ message }),
+      });
+
+      (event.target as HTMLInputElement).value = "";
     }
-});
+  });
diff --git a/index.d.ts b/index.d.ts
new file mode 100644
index 0000000..58ef63b
--- /dev/null
+++ b/index.d.ts
@@ -0,0 +1,14 @@
+import { User } from '@backend/middleware/db/UserDao';
+import { Session, SessionData } from 'express-session';
+
+declare module "express-session" {
+  interface SessionData {
+    user: User;
+  }
+}
+
+declare module 'node:http' {
+  interface IncomingMessage {
+    session: Session & Partial<SessionData>;
+  }
+}
